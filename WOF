import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;

import javafx.application.*;
import javafx.stage.Stage;
import javafx.scene.control.Button;
import javafx.scene.control.TextArea;
import javafx.scene.layout.VBox;
import javafx.scene.layout.HBox;
import javafx.scene.Scene;
import javafx.scene.control.TextInputDialog;
import javafx.event.ActionEvent;


public class WheelOfFortune extends Application {
	
	static String newLine = "\n";
	Button b1,b2;
	static TextArea output=new TextArea();
	VBox layout;
	HBox h;
	static TextInputDialog guess=new TextInputDialog("Enter 1 or 2");
	
	Scene scene;
	
	@Override
	public void start(Stage arg0) throws Exception {
		
		b1=new Button("Start Game");
		//b2=new Button("Guess Phrase");
		output.setMinSize(600, 400);
		output.setEditable(true);
		layout=new VBox();
		h=new HBox();
		
		layout.getChildren().add(b1);
		//layout.getChildren().add(b2);
		
		h.getChildren().add(layout);
		h.getChildren().add(output);
		scene=new Scene(h,800,400);
		
		b1.setOnAction((ActionEvent e) -> run2());
		
		arg0.setScene(scene);
		arg0.show();
				
	}
	
	public static void main(String[] args){
		launch(args);
	}
	
	private static ArrayList values;
	public static void readFile(String fileName) {
		Scanner inputFile;
		try {
			inputFile = new Scanner( new File(fileName));
		
		values = new ArrayList();
		
		while(inputFile.hasNext()){
			values.add(inputFile.nextLine());
			}
		}
		catch (FileNotFoundException e) {
		}
		
	}
	
	
	
	
	private static ArrayList phrases;
	public static void readFilePhrases(String fileName) {
		Scanner inputFile;
		try {
			inputFile = new Scanner( new File(fileName));
		
		phrases = new ArrayList();
		
		while(inputFile.hasNext()){
			phrases.add(inputFile.nextLine());
			}
		}
		catch (FileNotFoundException e) {
		}
		
	}
	
	
	
	private static String secret = null;
	private static int score1 = 0;
	private static int score2 = 0;
	private static boolean userTurn = true;
	private static ArrayList<String> userGuesses = new ArrayList();
	private static ArrayList<String> computerGuesses = new ArrayList();
	
	private static int wheelValueIndex = 0;
	private static int wheelValue = 0;
	

	
	public static boolean gameOver(){
		
		for(char c : secret.toCharArray())
			if(!userGuesses.contains("" + c) && !computerGuesses.contains("" + c )){
				return false;
			}
			
				return true;
				
			
	}
	
	public static void gameOverMessage(){
		    output.appendText(newLine);
		    output.appendText(newLine);
			//System.out.println();
			//System.out.println("Game Over!");
		    output.appendText("Game Over!");
		    output.appendText(newLine);
			//System.out.println("User Score: " + score1);
		    output.appendText("User Score: " + score1);
		    output.appendText(newLine);
			//System.out.println("Computer Score: " + score2);
		    output.appendText("Computer Score: " + score2);
		    output.appendText(newLine);
			if(score1> score2){
				output.appendText("Player Wins!");
				output.appendText(newLine);
				//System.out.println("Player Wins!");
			}
			if(score1<score2){
				output.appendText("Computer Wins");
				output.appendText(newLine);
				//System.out.println("Computer Wins");
			}
			if(score1 == score2){
				output.appendText("Tie!");
				output.appendText(newLine);
				//System.out.println("Tie!");
			}
			
		}
		
	
	
	public static void printState(){
		output.appendText(newLine);
		output.appendText(newLine);
		output.appendText((userTurn?"User":"Computer") + " turn");
		output.appendText(newLine);
		//System.out.println((userTurn?"User":"Computer") + " turn");
		output.appendText("User score: " + score1);
		output.appendText(newLine);
		//System.out.println("User score: " + score1);
		output.appendText("Computer score: " + score2);
		output.appendText(newLine);
		output.appendText(newLine);
		//System.out.println("Computer score " + score2);
		output.appendText("Guess : ");
		output.appendText(newLine);
		//System.out.println("Guess: ");
		printGuess();
		output.appendText(newLine);
		//System.out.println();
	}
	public static void printGuess(){
		for(char c : secret.toCharArray())
			if(userGuesses.contains(c) || computerGuesses.contains(c)){
				output.appendText(c + " ");
				
				//System.out.print(c + " " );
				
			}
			else{
				output.appendText("_ ");
				
				//System.out.print("_ ");
			}
		
	}
	
	public static boolean correct(char c2){
		for(char c : secret.toCharArray())
			if(c==c2){
				return true;
				
			}
			return false;
		
	}
	
	public static void updateUserScore(char c2){
		for(char c : secret.toCharArray())
			if(c==c2){
				score1 += wheelValue;
				
			}
			
		
	}
	
	
	public static void updateComputerScore(char c2){
		for(char c : secret.toCharArray())
			if(c==c2){
				score2 += wheelValue;
				
			}
			
		
	}
	
	public static void spin(){
		int r = (int)(Math.random()*100);
		while(r>0){
			wheelValueIndex++;
			r++;
			if(wheelValueIndex >values.size()-1){
				wheelValueIndex = 0;
			}
		}
		if(values.get(wheelValueIndex).equals("Bankrupt")){
			wheelValue = -100000;
		}
		else if(values.get(wheelValueIndex).equals("1Million")){
			wheelValue = 1000000;
		}
		else{
			wheelValue = Integer.parseInt((String) values.get(wheelValueIndex));
		}
	}
	
	
	private static Scanner input = new Scanner(System.in);
	
	public static void run2() {	
		readFile("input_values.txt");
		readFilePhrases("input_phrases.txt");
		secret = (String)(phrases.get((int)(Math.random()*phrases.size())));
		secret = secret.toLowerCase();
		System.out.println(secret);
		output.appendText(secret);
		output.appendText(newLine);

		//System.out.print(secret + " ");
		//System.out.println();
		//System.out.println();
		if(gameOver()){
				gameOverMessage();
			}
		if(!gameOver()){
		while(!gameOver()){
			spin();
			printState();
			 if (!userTurn && wheelValue> 0){ 
				    output.appendText(newLine);
				    output.appendText("Wheel value : " + wheelValue);
					output.appendText(newLine);


				 //System.out.println("Wheel value " + wheelValue);
				// System.out.println();
					char option = '1';
							
					if(option =='1'){
						Random r = new Random();
						char c = (char) (r.nextInt(26) + 'a');
						
						
						if(userGuesses.contains(c+"") || computerGuesses.contains(c+"") || !correct(c)){
							userTurn = !userTurn;
							
						}
						else{
							computerGuesses.add(c+"");
							updateComputerScore(c);
						}
					}
				}
			 
			 else if(userTurn && wheelValue>0){
				 output.appendText("Wheel value " + wheelValue);
				 output.appendText(newLine);
				 //System.out.println("Wheel value " + wheelValue);
				 //System.out.println();
					//System.out.println("(1) - Guess letter; (2) - Guess Phrase");
				 output.appendText("1 - Guess letter;  2 - Guess Phrase");
				 
					//char option = input.nextLine().charAt(0);
					char option=guess.showAndWait().get().charAt(0);
					if(option =='1'){
						output.appendText(newLine);
						output.appendText("Enter your letter: ");
						//System.out.println("Enter your letter: ");
						char c =guess.showAndWait().get().charAt(0);
						output.appendText(newLine);
						output.appendText(Character.toString(c));
						output.appendText(newLine);
						//char c = input.nextLine().charAt(0);
						//System.out.println();
					
						if(userGuesses.contains(c+"") || computerGuesses.contains(c+"") || !correct(c)){
						userTurn = !userTurn;
						
						}
						else{
							userGuesses.add(c+"");
							updateUserScore(c);
						}
					}
					else if(option == '2'){
						output.appendText(newLine);
						output.appendText("Enter phrase: ");
						//System.out.println("Enter phrase: ");
						String c =guess.showAndWait().get();
						//String c = input.nextLine();
						if(c.equalsIgnoreCase(secret)){
							gameOverMessage();
							break;
						}
						else if(!c.equalsIgnoreCase(secret)){
							userTurn = !userTurn;
						}
					}
				
				}
			 
		   else if(userTurn && wheelValue<=0){
			   output.appendText("Wheel value " + wheelValue);
				 output.appendText(newLine);
			   //System.out.println("Wheel Value: " + wheelValue);
			  // System.out.println();
				userTurn = !userTurn;
				score1 += wheelValue;
				if(score1<0){
					score1 = 0;
				
				}
			}
			 
		  else if(!userTurn && wheelValue<=0){
			  output.appendText("Wheel value " + wheelValue);
			  output.appendText(newLine);
			  //System.out.println("Wheel value: " + wheelValue);
			  //System.out.println();
				userTurn = !userTurn;
				score2 += wheelValue;
				if(score2<0){
					score2 = 0;
				
				}
			}
		 
			
			 if(gameOver()){
					gameOverMessage();
				}
			}
		
		
		}
		
		
		
	}

	 
	
	}



